{"version":1,"ops":[{"type":6,"author":{"id":"f3a70076b7be1c2a8539c83ab46e8669b027a3a1"},"timestamp":1603215340,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0NDQ0MjgxNTQ="},"target":"e12da9bd349272c9f555c38c6374ab10ff4829088bf12c6129adbb83ab40f5e1","message":"`long unsigned int` results and max cannot be represented with the gsl dictated (wrong) types for get and max. `UINT64_MAX` will be truncated to 32bit, as well as the rng results.\n\nwe could easily fix that by defining those types as `uint64_t`, but these types come from libgsl.","files":null},{"type":6,"author":{"id":"f3a70076b7be1c2a8539c83ab46e8669b027a3a1"},"timestamp":1603215378,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlRWRpdDo0NDQ0Mjg0Njk="},"target":"e12da9bd349272c9f555c38c6374ab10ff4829088bf12c6129adbb83ab40f5e1","message":"`long unsigned int` results and max cannot be represented with the gsl dictated (wrong) types for get and max. `UINT64_MAX` will be truncated to 32bit, as well as the rng results.\n\nwe could easily fix that by defining those types as `uint64_t`, but these types come from libgsl.\n\nwe could skip them, or rewrite them to return only 32bit results.","files":null},{"type":5,"author":{"id":"f3a70076b7be1c2a8539c83ab46e8669b027a3a1"},"timestamp":1603215300,"metadata":{"github-id":"MDEyOkxhYmVsZWRFdmVudDM4OTk5ODE1OTg="},"added":["bug"],"removed":[]},{"type":3,"author":{"id":"f3a70076b7be1c2a8539c83ab46e8669b027a3a1"},"timestamp":1603217823,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDcxMzA0NjczMQ==","github-url":"https://github.com/rurban/dieharder/issues/9#issuecomment-713046731"},"message":"I decided to skip some:\n*\trng_efiix64.c\n*\trng_romu.c\n*\trng_speck128.c\n*\trng_xoroshiro64bit.c\n*\trng_mt64.c\n\nplus the 64bit variants for pcg64, threefry, philox, mt64, jsf64\n\nand workaround the rest, to return 32bit only.\n* lxm\n* rdrand\n* wyrand","files":null},{"type":6,"author":{"id":"f3a70076b7be1c2a8539c83ab46e8669b027a3a1"},"timestamp":1603217823,"metadata":{"github-id":"MDE1OlVzZXJDb250ZW50RWRpdElzc3VlQ29tbWVudEVkaXQ6NDA4MDUxNDgw"},"target":"72eb22c89e61e2146eea195c0d45bc18090bcbbcaf37ac6ac24b8bdda99049ad","message":"I decided to skip some objects at all:\n*\trng_efiix64.c\n*\trng_romu.c\n*\trng_speck128.c\n*\trng_xoroshiro64bit.c\n*\trng_mt64.c\n\nplus the 64bit variants for pcg64, threefry, philox, mt64, jsf64\n\nand workaround the rest, to return 32bit only.:\n* lxm\n* rdrand\n* wyrand","files":null},{"type":3,"author":{"id":"f3a70076b7be1c2a8539c83ab46e8669b027a3a1"},"timestamp":1603526494,"metadata":{"github-id":"MDEyOklzc3VlQ29tbWVudDcxNTg3NzU1OQ==","github-url":"https://github.com/rurban/dieharder/issues/9#issuecomment-715877559"},"message":"Done with 4d058eae1128e5759763259a5a0dd9d2c2d2dc3d","files":null},{"type":4,"author":{"id":"f3a70076b7be1c2a8539c83ab46e8669b027a3a1"},"timestamp":1603526494,"metadata":{"github-id":"MDExOkNsb3NlZEV2ZW50MzkxNjQ5NjM2Nw=="},"status":2}]}